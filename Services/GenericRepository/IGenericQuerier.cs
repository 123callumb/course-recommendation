using Microsoft.EntityFrameworkCore;
using System;
using System.Linq;
using System.Linq.Expressions;

namespace Services.GenericRepository
{
    /// This is a generic query manager that subtracts the need for entity repositories.
    public interface IGenericQuerier
    {
        /// Load a dbset entity and map it into a dto with an optional where statement.
        /// <typeparam name="Entity">Must be of type that belongs to the entities generated by the entity framework scaffold</typeparam>
        /// <typeparam name="EntityDTO">Must be the mapping object that is no an object of the dbsets.</typeparam>
        /// <param name="select">The map statement.</param>
        /// <param name="where">Optional where statement.</param>
        /// <returns>Returns an IQueryable of the entity which is executed once an async method is called on it. E.g. ToListAsync()</returns>
        IQueryable<EntityDTO> Load<Entity, EntityDTO>(Expression<Func<Entity, EntityDTO>> select, Expression<Func<Entity, bool>> where = null) where Entity : class;

        /// Directly loads an entity from the database and keeps its references. If an entity from this result is altered and save changes is called it will be modified on the database end too.
        /// Used for grabbing entities for deletion and updating.
        /// <typeparam name="Entity">Must be of type that belongs to the entities generated by the entity framework scaffold</typeparam>
        /// <param name="where">That satisfy a specific predicate. If this is no required user <see cref="LoadDbSet{TEntity}" /></param>
        /// <returns>Returns an entity with links to the dbset.</returns>
        IQueryable<Entity> LoadEntity<Entity>(Expression<Func<Entity, bool>> where) where Entity : class;

        /// Load db set from the db. Not suitable for loading large amounts of data as it keeps it's reference. 
        /// Use with caution. Entity mappings should be done with <see cref="Load{Entity, EntityDTO}(Expression{Func{Entity, EntityDTO}}, Expression{Func{Entity, bool}})"/> when loading large dataset that do not need to be edited. 
        /// <typeparam name="TEntity">Must be of type that belongs to the entities generated by the entity framework scaffold</typeparam>
        /// <returns>Db set from the data base of type.</returns>
        DbSet<TEntity> LoadDbSet<TEntity>() where TEntity : class;
    }
}
